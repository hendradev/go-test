on:
  push:
    branches:
      - main
  pull_request:
      types: [opened, synchronize, reopened]
name: Main Workflow
jobs:
  sonarqube:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/cache@v2
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - uses: actions/checkout@v2
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0    
    - name: Golang setup
      uses: actions/setup-go@v2
      with:
        go-version: '1.15.2' # The Go version to download (if necessary) and use.
    - name: set properties for pr decoration
      run: |
        echo "" >> sonar-project.properties
        echo """sonar.pullrequest.key = """ ${{ github.event.pull_request.number }} >> sonar-project.properties
        echo """sonar.pullrequest.branch = """ ${{ github.head_ref }} >> sonar-project.properties
        echo """sonar.pullrequest.base = ${{ github.base_ref }} """ >> sonar-project.properties
        cat sonar-project.properties
    - name: Run go test
      run: go test -v ./service -coverprofile=coverages/coverage.out -json
    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
    - name: Check report task
      run: cat .scannerwork/report-task.txt
    - name: SonarQube Quality Gate check
      uses: sonarsource/sonarqube-quality-gate-action@master
      # Force to fail step after specific time
      timeout-minutes: 5
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} 
    # - uses: ouzi-dev/commit-status-updater@v1.1.0
    #   with:
    #     status: "pending"
    #     url: http://myurl.io/
    #     description: "this is my status check"
    #     name: "name of my status check"